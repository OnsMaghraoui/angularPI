{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CreditDemandService } from \"../../service/credit-demand.service\";\nimport * as Rellax from \"rellax\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { TypeCd } from \"../../class/TypeCd\";\nimport { BehaviorSubject } from \"rxjs\";\nlet ClientCreditDemandComponent = class ClientCreditDemandComponent {\n  constructor(formBuilder, creditDemandService) {\n    this.formBuilder = formBuilder;\n    this.creditDemandService = creditDemandService;\n    this.styles = [{\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#e9e9e9\"\n      }, {\n        \"lightness\": 17\n      }]\n    }, {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#f5f5f5\"\n      }, {\n        \"lightness\": 20\n      }]\n    }, {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }, {\n        \"lightness\": 17\n      }]\n    }, {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }, {\n        \"lightness\": 29\n      }, {\n        \"weight\": 0.2\n      }]\n    }, {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }, {\n        \"lightness\": 18\n      }]\n    }, {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#ffffff\"\n      }, {\n        \"lightness\": 16\n      }]\n    }, {\n      \"featureType\": \"poi\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#f5f5f5\"\n      }, {\n        \"lightness\": 21\n      }]\n    }, {\n      \"featureType\": \"poi.park\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#dedede\"\n      }, {\n        \"lightness\": 21\n      }]\n    }, {\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [{\n        \"visibility\": \"on\"\n      }, {\n        \"color\": \"#ffffff\"\n      }, {\n        \"lightness\": 16\n      }]\n    }, {\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [{\n        \"saturation\": 36\n      }, {\n        \"color\": \"#333333\"\n      }, {\n        \"lightness\": 40\n      }]\n    }, {\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    }, {\n      \"featureType\": \"transit\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"color\": \"#f2f2f2\"\n      }, {\n        \"lightness\": 19\n      }]\n    }, {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [{\n        \"color\": \"#fefefe\"\n      }, {\n        \"lightness\": 20\n      }]\n    }, {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [{\n        \"color\": \"#fefefe\"\n      }, {\n        \"lightness\": 17\n      }, {\n        \"weight\": 1.2\n      }]\n    }];\n    this.alerts = [];\n    this.TypeCd = TypeCd; // added to make the enum accessible in the HTML template\n    this.creditDemand = {};\n    //creditDemand = { value_cd: 0, sum_cd: 0, duration_cd: 0 };\n    this.sum = new BehaviorSubject(0);\n    this.duration = new BehaviorSubject(0);\n    this.currentUser = {\n      id: 1\n    }; // TODO: Replace with the actual user ID\n    this.creditDemandForm = this.formBuilder.group({\n      sum_cd: ['', Validators.required],\n      duration_cd: ['', Validators.required],\n      value_cd: ['', Validators.required],\n      interestRate: ['', Validators.required],\n      typecd: ['', Validators.required]\n    });\n    this.sum.subscribe(val => {\n      this.creditDemand.sum_cd = val;\n      this.calculateDuration();\n    });\n    this.duration.subscribe(val => {\n      this.creditDemand.duration_cd = val;\n      this.calculateMonthlyPayment();\n    });\n  }\n  ngOnInit() {\n    var rellaxHeader = new Rellax('.rellax-header');\n    var body = document.getElementsByTagName('body')[0];\n    body.classList.add('login-page');\n    var navbar = document.getElementsByTagName('nav')[0];\n    navbar.classList.add('navbar-transparent');\n  }\n  ngOnDestroy() {\n    var body = document.getElementsByTagName('body')[0];\n    body.classList.remove('login-page');\n    var navbar = document.getElementsByTagName('nav')[0];\n    navbar.classList.remove('navbar-transparent');\n  }\n  createCreditDemand() {\n    const creditDemand = {\n      sum_cd: this.creditDemandForm.value.sum_cd,\n      duration_cd: this.creditDemandForm.value.duration_cd,\n      value_cd: this.creditDemandForm.value.value_cd,\n      interestRate: this.creditDemandForm.value.interestRate,\n      typecd: this.creditDemandForm.value.typecd\n    };\n    this.creditDemandService.addCreditDemand(this.creditDemand, this.currentUser.id).subscribe(data => {\n      console.log(data);\n      // TODO: Notify the user that the credit demand was created\n    }, error => {\n      console.error(error);\n      // TODO: Notify the user that an error occurred\n    });\n  }\n  /** onSumChange() {\r\n     this.sum.next(this.creditDemand.sum_cd);\r\n   }\r\n  \n   onDurationChange() {\r\n     this.duration.next(this.creditDemand.duration_cd);\r\n   }\r\n  \n  **/\n  calculateDuration() {\n    const duration = Math.round(this.creditDemand.sum_cd / this.creditDemand.duration_cd);\n    this.duration.next(duration);\n  }\n  calculateMonthlyPayment() {\n    const interestRate = this.creditDemand.interestRate / 12;\n    const n = this.creditDemand.duration_cd;\n    const numerator = this.creditDemand.value_cd * interestRate;\n    const denominator = 1 - Math.pow(1 + interestRate, -n);\n    const monthlyPayment = numerator / denominator;\n    this.sum.next(monthlyPayment);\n  }\n  onDurationChange() {\n    if (this.creditDemand.value_cd && this.creditDemand.duration_cd) {\n      this.monthlyPayment$ = this.creditDemandService.calculateMonthlyPayment(this.creditDemand.value_cd, this.creditDemand.duration_cd, this.creditDemand.typecd);\n    }\n  }\n  onSumChange() {\n    if (this.creditDemand.value_cd && this.creditDemand.sum_cd) {\n      this.duration$ = this.creditDemandService.calculateDuration(this.creditDemand.value_cd, this.creditDemand.sum_cd, this.creditDemand.typecd);\n    }\n  }\n  closeAlert(alert) {\n    const index = this.alerts.indexOf(alert);\n    this.alerts.splice(index, 1);\n  }\n};\nClientCreditDemandComponent = __decorate([Component({\n  selector: 'app-client-credit-demand',\n  templateUrl: './client-credit-demand.component.html',\n  styleUrls: ['./client-credit-demand.component.css']\n}), __metadata(\"design:paramtypes\", [FormBuilder, CreditDemandService])], ClientCreditDemandComponent);\nexport { ClientCreditDemandComponent };","map":null,"metadata":{},"sourceType":"module"}