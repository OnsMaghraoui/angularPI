{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { EventService } from \"../../../front/service/event.service\";\nimport * as Rellax from \"rellax\";\nlet EventComponent = class EventComponent {\n  constructor(eventService, router, formBuilder) {\n    this.eventService = eventService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.alerts = [];\n  }\n  ngOnInit() {\n    var rellaxHeader = new Rellax('.rellax-header');\n    var body = document.getElementsByTagName('body')[0];\n    body.classList.add('app-consultation');\n    var navbar = document.getElementsByTagName('nav')[0];\n    navbar.classList.add('navbar-transparent');\n    this.showEvent();\n  }\n  showEvent() {\n    this.eventService.retrieveAllevents().subscribe(events => {\n      this.events = events;\n    });\n  }\n  assignEventToUser(id_event) {\n    const id_user = 2; // replace with actual user ID\n    this.eventService.assignEventToUser(id_event, id_user).subscribe(Response => {\n      console.log('Event assigned to user');\n      this.alerts.push({\n        id: 2,\n        type: 'success',\n        strong: 'Success!',\n        message: 'An email was sent to the user to inform them.',\n        icon: 'ui-2_like'\n      });\n    }, error => {\n      console.error('Error assigning event to user:', error);\n    });\n    window.location.reload();\n  }\n  deleteevent(id_event) {\n    if (confirm('Are you sure you want to delete this event?')) {\n      this.eventService.deleteevent(id_event).subscribe(Response => {\n        // Show success message\n        this.alerts.push({\n          id: 2,\n          type: 'success',\n          strong: 'Success!',\n          message: 'event deleted successfully.',\n          icon: 'ui-2_like'\n        });\n        window.location.reload();\n      });\n    } else {\n      this.alerts.push({\n        id: 3,\n        type: 'warning',\n        strong: 'Cancelled!',\n        message: 'event deletion cancelled.',\n        icon: 'ui-1_bell-53'\n      });\n    }\n  }\n  closeAlert(alert) {\n    setTimeout(() => {\n      const index = this.alerts.indexOf(alert);\n      if (index !== -1) {\n        this.alerts.splice(index, 1);\n      }\n    }, alert.visibleTime);\n  }\n};\nEventComponent = __decorate([Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n}), __metadata(\"design:paramtypes\", [EventService, Router, Object])], EventComponent);\nexport { EventComponent };","map":null,"metadata":{},"sourceType":"module"}